#!/usr/bin/env python
import sys
from fabric.api import *
from fabric.contrib.files import exists, append

env.user        = 'masterbuilder'
env.host_string = 'technicmocs.created.today'
project_name    = 'technicmocs'
project_dir     = '/srv/' + project_name

def deploy():
    '''
    The deploy() function contains all the steps to turn a vanilla Debian
    installation into a nginx + uwsgi + ruby + lamernews + redis server
    '''

    # Create project directory
    sudo('mkdir -p %s' % project_dir)
    sudo('chown %s %s' % (env.user, project_dir))

    # Get the necessary packages
    apt_install('build-essential ruby ruby-dev git tcl nginx curl')
    gem_install('bundler rake uwsgi')
    github('antirez', 'redis')
    github('antirez', 'lamernews')

    # Build and install Redis
    with cd('%s/redis' % project_dir):
        run('git checkout 3.0.1')
        run('make')
        sudo('make install')
    sudo('adduser --system --group --quiet --home /var/local/lib/redis redis')
    put('redis.service', '/etc/systemd/system/redis.service', use_sudo=True)
    put('redis.conf', '/etc/redis.conf', use_sudo=True)
    sudo('systemctl daemon-reload')
    sudo('systemctl enable redis')
    sudo('systemctl start redis')

    # Setup the Lamernews app
    with cd('%s/lamernews' % project_dir):
        run('sed -i "/ruby \'1.9.3\'/d" Gemfile')
        rubyrun('bundle install')
        put('app_config.rb', 'app_config.rb')

    # Configure uwsgi
    sudo('find %s/gems -name uwsgi.ruby -exec cp {} /usr/local/bin/uwsgi \;' % project_dir)
    sudo('mkdir -p /etc/uwsgi.d')
    put('uwsgi.ini', '/etc/uwsgi.d/%s.ini' % project_name, use_sudo=True)
    put('uwsgi.service', '/etc/systemd/system/uwsgi.service', use_sudo=True)
    sudo('systemctl daemon-reload')
    sudo('systemctl enable uwsgi')
    sudo('systemctl start uwsgi')

    # Configure nginx
    put('nginx.conf', '/etc/nginx/sites-enabled/%s' % project_name, use_sudo=True)
    sudo('systemctl reload nginx')

def apt_install(packages):
    if command_fails('dpkg -l %s' % packages):
        sudo('apt-get install %s' % packages)

def gem_install(packages):
    packages = packages.split(' ')
    for package in packages:
        if ruby_command_fails('gem list -i %s' % package):
            rubyrun('gem install --verbose --no-document %s' % package)

def github(user, repo):
    with cd(project_dir):
        if not exists(repo):
            run('git clone https://github.com/%s/%s' % (user, repo))

def command_fails(command):
    with settings(hide('warnings'), warn_only=True):
        return run(command).failed

def ruby_command_fails(command):
    with settings(hide('warnings'), warn_only=True):
        return rubyrun(command).failed

def rubyrun(command):
    gemdir = '/srv/%s/gems' % project_name
    with shell_env(GEM_HOME=gemdir), path(gemdir + '/bin'):
        return run(command)

if __name__ == '__main__':
    deploy()
